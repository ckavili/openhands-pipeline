---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: openhands-issue-resolver-pipeline
spec:
  description: Simple OpenHands pipeline that processes specified repositories
  params:
    # Standard pipeline parameters
    - name: repo-url
      type: string
      description: Repository URL to process
      default: "https://github.com/RHRolun/test-openhands"
    - name: llm-model
      type: string
      description: LLM model to use
      default: "openai/qwen/qwen3-235b-a22b-07-25:free"
    - name: max-iterations
      type: string
      description: Maximum iterations for OpenHands
      default: "10"
    # Event context parameters
    - name: event-type
      type: string
      description: GitHub event type
      default: "issue"
    - name: repo-full-name
      type: string
      description: Repository full name (org/repo)
      default: "RHRolun/test-openhands"
    - name: username
      type: string
      description: Git username that owns the PAT
    - name: namespace
      type: string
      description: Namespace to run OpenHands 
  workspaces:
    - name: workspace
      description: Shared workspace for processing
  tasks:
    - name: clone-repository
      taskRef:
        resolver: cluster
        params:
          - name: kind
            value: task
          - name: name
            value: git-clone
          - name: namespace
            value: openshift-pipelines 
      workspaces:
        - name: output
          workspace: workspace
      params:
        - name: URL
          value: "$(params.repo-url)"
        - name: REVISION
          value: "main"
        - name: DELETE_EXISTING
          value: "true"
        - name: SSL_VERIFY
          value: "false"
    - name: openhands-issue-resolver
      taskRef:
        name: openhands-issue-resolver
      params:
        - name: repo-url
          value: $(params.repo-url)
        - name: llm-model
          value: $(params.llm-model)
        - name: max-iterations
          value: $(params.max-iterations)
        - name: event-type
          value: $(params.event-type)
        - name: repo-full-name
          value: $(params.repo-full-name)
        - name: username
          value: $(params.username)
        - name: namespace
          value: openhands-pipeline
      runAfter:
        - clone-repository
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: openhands-issue-resolver
spec:
  description: Process a single repository with OpenHands
  params:
    # Standard pipeline parameters
    - name: repo-url
      type: string
      description: Repository URL
    - name: llm-model
      type: string
      description: LLM model to use
    - name: max-iterations
      type: string
      description: Maximum iterations
    - name: event-type
      type: string
      description: GitHub event type
    - name: repo-full-name
      type: string
      description: Repository full name (org/repo)
    - name: username
      type: string
      description: Git username that owns the PAT
    - name: namespace
      type: string
      description: Namespace for the pipeline
  steps:
    - name: setup-and-process
      image: quay.io/rlundber/openhands-main:0.2
      env:
        # OpenHands Configuration
        - name: LLM_API_KEY
          valueFrom:
            secretKeyRef:
              name: openhands-secrets
              key: llm-api-key
        - name: PAT_TOKEN
          valueFrom:
            secretKeyRef:
              name: openhands-secrets
              key: pat-token

      script: |
        #!/bin/bash
        set -e

        curl -sLo /tmp/jq https://github.com/stedolan/jq/releases/download/jq-1.8.1/jq-linux64 && \
        chmod +x /tmp/jq

        export LLM_MODEL=$(params.llm-model)
        export KUBERNETES_NAMESPACE=$(params.namespace)
        
        echo "üöÄ Starting OpenHands processing..."
        echo "Repository: $(params.repo-url)"
        echo "LLM Model: $(params.llm-model)"
        echo "Max Iterations: $(params.max-iterations)"
        echo "Event Type: $(params.event-type)"
        
        sed -i 's/docker/kubernetes/g' /app/openhands/resolver/issue_resolver.py

        REPO_NAME=$(echo "$(params.repo-full-name)" | cut -d'/' -f2 | tr '_' '-')
        sed -i "s/session_id = sid or generate_sid(config)/session_id = \"${REPO_NAME}\"/" /app/openhands/core/setup.py

        # Check for open issues in the repository
        echo "üîç Checking for open issues in $(params.repo-full-name)..."
        ISSUES=$(curl -s -H "Authorization: token $PAT_TOKEN" \
          "https://api.github.com/repos/$(params.repo-full-name)/issues?state=open&labels=openhands&per_page=100" | \
          /tmp/jq -r '.[] | select(.pull_request == null) | .number' | head -10)

        if [ -z "$ISSUES" ]; then
          echo "‚ùå No open issues found in $(params.repo-full-name)"
          exit 0
        fi

        echo "üìù Found open issues: $(echo $ISSUES | tr '\n' ' ')"

        # Process each issue
        for issue_number in $ISSUES; do
          echo "üöÄ Processing issue #${issue_number}..."
          
          python -m openhands.resolver.resolve_issue \
            --selected-repo $(params.repo-full-name) \
            --issue-number ${issue_number} \
            --issue-type $(params.event-type) \
            --username $(params.username) \
            --token $PAT_TOKEN \
            --max-iterations $(params.max-iterations) || echo "‚ùå Failed to resolve issue #${issue_number}"
          
          python -m openhands.resolver.send_pull_request \
            --selected-repo $(params.repo-full-name) \
            --issue-number ${issue_number} \
            --username $(params.username) \
            --token $PAT_TOKEN \
            --pr-type draft || echo "‚ùå Failed to create PR for issue #${issue_number}"
            
          echo "‚úÖ Completed processing issue #${issue_number}"
        done

        echo "üéâ Finished processing all open issues"